# This is the main configuration file for the application.
# ~~~~~

# Secret key
application.secret = "o>SfduUp7h2K]l8UA9<p:9]<r1]L@D^QEh3iaKLn3>b8Xb;/yjyafRuEisuR/IPU"

node.name = "node1"

# The application languages
application.langs = "en,ru"

db.default.driver = org.postgresql.Driver

db.default.url = "jdbc:postgresql://172.17.42.1:5432/monitoring"
db.default.user = monitoring
db.default.password = monitoring

dbplugin = disabled

db.default.minPoolSize = 3
db.default.maxPoolSize = 5

secure.mode.https = false

parsers.text.maxLength = 1024K

# Disable helper threads
db.default.releaseHelperThreads = 0

# Evolutions
evolutionplugin = enabled
evolutions.enabled = true

# Ebean configuration
ebean.default = "models.*"

output.points.maxDecimalDigits = 5

security.resolving.enabled = true

daemon.requests.simultaneous.max = 50
daemon.timediff.max = 3600000 // максимальная поддерживаемая разница во времени(в мс) между сервером и демонами

# символ в поле графа(tagValue), указывающий, что график должен отображать значения всех тэгов
graphics.selectWithAllTagValues.symbol = "*"
# сколько можно отображать значений тэгов на графике со "всеми" значениями тэга
graphics.selectWithAllTagValues.maxSize = 16

#настройки кеширования
monitor.cache.time = 180000 #кеширование в стандартном контроллере
monitor.validation.cache.time = 1000 # при валидации в формах создания и апдейта проверяется существование сущности. Чтоб потом опять не дергать ее из бд она кешируется

# настройки аггрегатора
aggregator.default_points_count = 100 # количество точек для возвращения клиениту по умолчанию
aggregator.api_time_grid_resolver_id = 1 # 0 - EnumGridResolver(default), 1 - EqualDivisionGridResolver

# размеры кэшей сервиса InfosService
infos.cache.expiration = 30 // in minutes (after last access)
infos.cache.appinfos.size = 5000
infos.cache.metricinfos.size = 5000
infos.cache.tagnametoid.size = 100000

aggregation.calculation.precision = 10 //сколько знаков после запятой учитывать при вычислениях

#сколько точек для разных периодов аггрегации хранить
config.aggregation.1m = 1440 // за день
config.aggregation.5m = 4032 // за 2 недели
config.aggregation.1h = 1488 // 2 месяца
config.aggregation.12h = 732 // год

config.rawpoints.ttl = 86400000 //in ms

#redis
redis.host = "172.17.42.1"
redis.port = 6379
redis.password = ""

# cassandra
cassandra.hosts = ["172.17.42.1"]
cassandra.port = 9042
cassandra.username = ""
cassandra.password = ""
cassandra.keyspace.name = monitoring
cassandra.query.fetch_size = 10000
cassandra.retriesOnUnavailable.max = 5

#cassandra.local.datacenter.name = "DC1" // DC1 - ams3, DC2 - lon1

# как часто проверять статус приложения (in ms)
application.status.check.timeout = 10000

# security.oAuth paths
oauth.host = "https://accounts.geo4.me"
oauth.auth.url = /auth
oauth.logout.url = /logout
oauth.getAccessToken.url = /accessToken
oauth.getRefreshToken.url = /refreshToken
oauth.profile.url = /getProfile
oauth.timeBeforeRefresh.accessToken = 1h
oauth.users.getById = /rest/users/
oauth.getVisibleUsers = /rest/users

# security.oAuth data of application
oauth.app.consumerID = "b1d94241-b179-47a8-ad2a-82d3b9b27699"
oauth.app.login = "admin@accounts.ru"
oauth.app.password = "gfhjkm"

# ------- Deadbolt -------
deadbolt.java.handler = security.MonitoringDeadboltHandler
deadbolt.cache-user = true

#----------Airbrake plugin---------------
airbrake.apiKey = "c48dfa64110fa8f50f71a1152d537429"
airbrake.endpoint = "bugs.geo4.me/notifier_api/v2/notices"
airbrake.enabled = true
airbrake.ssl = true

smtp.host = mail.geo4.me
smtp.user = monitoring
smtp.password = "665M299xI83817q"

# размер пулов акторов
akkaconf.metricscreator.poolsize = 16
akkaconf.metricsparser.poolsize = 16

# AKKA CONFIGURATION
akka {
  loggers = ["akka.event.Logging$DefaultLogger"]
  loglevel = WARNING
  actor {
    provider = "akka.actor.LocalActorRefProvider"
  }
}

# DISPATCHERS
metrics-parser-pool-dispatcher {
  parallelism-factor = 2
  fork-join-executor.parallelism-min = 1
  fork-join-executor.parallelism-max = 32
}

metrics-saver-dispatcher {
  parallelism-factor = 2
  fork-join-executor.parallelism-min = 1
  fork-join-executor.parallelism-max = 4
}
